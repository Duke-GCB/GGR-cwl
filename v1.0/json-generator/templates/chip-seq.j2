{
    "input_treatment_fastq{% if 'pe' == wf_conf['rt'] %}_read1{% endif %}_files": [
    {% for samples in samples_list %}
        { "class": "File", "path": "{{ data_dir }}/{{ samples['treatment'] }}{% if 'pe' == wf_conf['rt'] %}.R1{% endif %}.fastq" }{% if loop.index < samples_list|length %},{% endif %}
    {% endfor %}
    ],
{% if 'pe' == wf_conf['rt'] %}
    "input_treatment_fastq_read2_files": [
    {% for samples in samples_list %}
        { "class": "File", "path": "{{ data_dir }}/{{ samples['treatment'] }}.R2.fastq" }{% if loop.index < samples_list|length %},{% endif %}
    {% endfor %}
    ],
{% endif %}
{% if 'control' in wf_conf['st'] %}

    "input_control_fastq{% if 'pe' == wf_conf['rt'] %}_read1{% endif %}_files": [
    {% for samples in samples_list %}
        { "class": "File", "path": "{{ data_dir }}/{{ samples['control'] }}{% if 'pe' == wf_conf['rt'] %}.R1{% endif %}.fastq" }{% if loop.index < samples_list|length %},{% endif %}
    {% endfor %}
    ],
    {% if 'pe' == wf_conf['rt'] %}
    "input_control_fastq_read2_files": [
    {% for samples in samples_list %}
        { "class": "File", "path": "{{ data_dir }}/{{ samples['control'] }}.R2.fastq" }{% if loop.index < samples_list|length %},{% endif %}
    {% endfor %}
    ],
    {% endif %}
{% endif %}
    "as_narrowPeak_file": { "class": "File", "path": "{{ conf_args.as_narrowPeak }}" },
    "as_broadPeak_file": { "class": "File", "path": "{{ conf_args.as_broadPeak }}" },
    "genome_effective_size": "{{ conf_args.genome_effective_size }}",
    "default_adapters_file": { "class": "File", "path": "{{ conf_args.default_adapters }}" },
    "genome_ref_first_index_file": { "class": "File", "path": "{{ conf_args.bowtie_genome_ref_first_index }}" },
    "genome_sizes_file": { "class": "File", "path": "{{ conf_args.genome_sizes_file }}" },
    "ENCODE_blacklist_bedfile": { "class": "File", "path": "{{ conf_args.encode_blacklist_bedfile }}" },
    "nthreads_qc": {{ conf_args.nthreads }},
    "nthreads_trimm": {{ conf_args.nthreads }},
    "nthreads_map": {{ conf_args.nthreads }},
    "nthreads_peakcall": {{ conf_args.nthreads }},
    "nthreads_quant": {{ conf_args.nthreads }},
    "trimmomatic_jar_path": "{{ conf_args.trimmomatic_jar }}",
    "trimmomatic_java_opts": "-Xms{{ (conf_args.mem/2) | round | int }}m -Xmx{{ conf_args.mem }}m",
    "picard_jar_path": "{{ conf_args.picard_jar }}",
    "picard_java_opts": "-Xms{{ (conf_args.mem/2) | round | int }}m -Xmx{{ conf_args.mem }}m"
}
